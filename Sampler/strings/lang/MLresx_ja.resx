<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.
    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>

  <data name="mlFormatDate" xml:space="preserve">
    <value>YYYY/MM/DD</value>
  </data>
  <data name="mlFormatTime" xml:space="preserve">
    <value>hh:mm:ss</value>
  </data>
  <data name="mlFormatTimestamp" xml:space="preserve">
    <value>YYYY/MM/DD hh:mm:ss</value>
  </data>
  <data name="mlFormatInterval" xml:space="preserve">
    <value>D hh:mm</value>
  </data>
  <data name="mlFormatNum" xml:space="preserve">
    <value>#,##0.dec</value>
  </data>
  <data name="mlFormatNumDefaultDecimals" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="mlFormatNumDecimal" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="mlFormatNumThousand" xml:space="preserve">
    <value>,</value>
  </data>
  <data name="mlFormatMoney" xml:space="preserve">
    <value>#,##0.dec</value>
  </data>
  <data name="mlFormatMoneyCurrency" xml:space="preserve">
    <value>cur#,##0.dec</value>
  </data>
  <data name="mlFormatMoneyDefaultCurrency" xml:space="preserve">
    <value>¥</value>
  </data>
  <data name="mlFormatMoneyDefaultDecimals" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="mlFormatMoneyDecimal" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="mlFormatMoneyThousand" xml:space="preserve">
    <value>,</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>会社</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>日付</value>
  </data>
  <data name="Extended Price" xml:space="preserve">
    <value>延長価格</value>
  </data>
  <data name="Industry" xml:space="preserve">
    <value>企業</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="Order Number" xml:space="preserve">
    <value>注文番号</value>
  </data>
  <data name="Order Details" xml:space="preserve">
    <value>順序の細部</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>プロダクト</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>量</value>
  </data>
  <data name="Sector" xml:space="preserve">
    <value>セクター</value>
  </data>
  <data name="Total Orders" xml:space="preserve">
    <value>総順序</value>
  </data>
  <data name="Unit Price" xml:space="preserve">
    <value>単価</value>
  </data>
  <data name="Select your preferred language..." xml:space="preserve">
    <value>あなたの好みの言語を選択</value>
  </data>
  <data name="themeRGB" xml:space="preserve">
    <value>RGB(188, 0, 45)</value>
  </data>
  <data name="Order Analysis" xml:space="preserve">
    <value>受注分析</value>
  </data>
  <data name="Application Info" xml:space="preserve">
    <value>アプリケーション情報</value>
  </data>
  <data name="DEVELOPER" xml:space="preserve">
    <value>デベロッパー</value>
  </data>
  <data name="Data Explorer" xml:space="preserve">
    <value>データエクスプローラー</value>
  </data>
  <data name="Language String Explorer" xml:space="preserve">
    <value>言語 文字列エクスプローラー</value>
  </data>
  <data name="Language Section Access" xml:space="preserve">
    <value>言語 セクションアクセス</value>
  </data>
  <data name="Language Format Explorer" xml:space="preserve">
    <value>言語フォーマットエクスプローラー</value>
  </data>
  <data name=
    "Formatted Data" xml:space="preserve">
    <value>フォーマットされたデータ</value>
  </data>
  <data name=
    "Raw Data" xml:space="preserve">
    <value>RAWデータ</value>
  </data>
  <data name=
    "Age" xml:space="preserve">
    <value>年齢</value>
  </data>
  <data name=
    "Local Currency Format" xml:space="preserve">
    <value>現地通貨フォーマット</value>
  </data>
  <data name=
    "Language Order" xml:space="preserve">
    <value>言語順</value>
  </data>
  <data name=
    "Section Access Table" xml:space="preserve">
    <value>セクションアクセステーブル</value>
  </data>
  <data name=
    "LanguageFooter" xml:space="preserve">
    <value>このボックスは、より多くの分析コンテンツのために削除することができます。 ユーザーの設定は、セキュリティグループを使用して指定できます。</value>
  </data>
  <data name=
    "ReloadSubtitle" xml:space="preserve">
    <value>リソースファイル/データベースを新しい文字列値で更新した後、アプリをリロードして反映させます。</value>
  </data>
  <data name=
    "TableColTitle" xml:space="preserve">
    <value>列に基づいたアプローチ: 言語設定に基づいて列が「切り替わり」ます。</value>
  </data>
  <data name=
    "TableRowTitle" xml:space="preserve">
    <value>行に基づいたアプローチ: 言語設定に基づいて行が「フィルタリング/削除」されます。</value>
  </data>
  <data name=
    "TableCRFooter" xml:space="preserve">
    <value>注: このテーブルは上記の選択に基づいて変更されません。デモンストレーションの目的のみです。</value>
  </data>
</root>
